import React, { useEffect, useRef, useState } from 'react';
import { FaFilter } from 'react-icons/fa';
import FilterSidebar from '../components/Product/FilterSidebar';
import ProductGrid from '../components/Product/ProductGrid';
import SortOptions from '../components/Product/SortOption';
import { useNavigate } from 'react-router-dom';

const Collectionpage = () => {
  const [products, setProducts] = useState([]);
  const [isSidebarOpen, setIsSidebarOpen] = useState(false);
  const sidebarRef = useRef(null);
  const navigate = useNavigate();

  const toggleSidebar = () => {
    setIsSidebarOpen(!isSidebarOpen);
  };

  const handleClickOutside = (e) => {
    if (sidebarRef.current && !sidebarRef.current.contains(e.target)) {
      setIsSidebarOpen(false);
    }
  };

  useEffect(() => {
    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, []);

  useEffect(() => {
    const fetchedProducts = [
      {
        id: 1,
        name: "Urban Explorer Jacket",
        price: 109,
        size: "M",
        color: "Black",
        quantity: 1,
        image: "https://i.pinimg.com/736x/49/a9/a8/49a9a8b0253adccc1fb8d078b6244296.jpg",
        images: [{ url: "https://i.pinimg.com/736x/49/a9/a8/49a9a8b0253adccc1fb8d078b6244296.jpg" }]
      },
      {
        id: 2,
        name: "Retro Denim Jacket",
        price: 92,
        size: "L",
        color: "Blue",
        quantity: 1,
        image: "https://i.pinimg.com/736x/f6/0f/16/f60f16a9c8353d5ef7e1bbf9621cc1a0.jpg",
        images: [{ url: "https://i.pinimg.com/736x/f6/0f/16/f60f16a9c8353d5ef7e1bbf9621cc1a0.jpg" }]
      },
      {
        id: 3,
        name: "Storm Shield Bomber",
        price: 115,
        size: "L",
        color: "Grey",
        quantity: 1,
        image: "https://i.pinimg.com/originals/df/f9/6c/dff96cd48c623a7516ff5f7e54c65d6a.jpg",
        images: [{ url: "https://i.pinimg.com/originals/df/f9/6c/dff96cd48c623a7516ff5f7e54c65d6a.jpg" }]
      },
      {
        id: 4,
        name: "Midnight Blazer",
        price: 102,
        size: "M",
        color: "Navy",
        quantity: 1,
        image: "https://i.pinimg.com/736x/fb/fa/38/fbfa38f3a7a103cd58f0035db9a6ac3d.jpg",
        images: [{ url: "https://i.pinimg.com/736x/fb/fa/38/fbfa38f3a7a103cd58f0035db9a6ac3d.jpg" }]
      },
      {
        id: 5,
        name: "Textured Wool Coat",
        price: 138,
        size: "XL",
        color: "Beige",
        quantity: 1,
        image: "https://i.pinimg.com/736x/a6/7e/b4/a67eb4d66125ff4cd6d6ea6de7484278.jpg",
        images: [{ url: "https://i.pinimg.com/736x/a6/7e/b4/a67eb4d66125ff4cd6d6ea6de7484278.jpg" }]
      },
      {
        id: 6,
        name: "Vintage Overshirt",
        price: 99,
        size: "L",
        color: "Olive",
        quantity: 1,
        image: "https://i.pinimg.com/originals/7b/79/ee/7b79eeeae23a33057de5eaefc0b8cc00.jpg",
        images: [{ url: "https://i.pinimg.com/originals/7b/79/ee/7b79eeeae23a33057de5eaefc0b8cc00.jpg" }]
      },
      {
        id: 7,
        name: "Linen Short Suit",
        price: 124,
        size: "M",
        color: "Grey",
        quantity: 1,
        image: "https://i.styleoholic.com/2021/04/a-grey-linen-shorts-suit-with-an-oversized-blazer-bermuda-shorts-a-white-crop-top-and-neutral-trainers.jpg",
        images: [{ url: "https://i.styleoholic.com/2021/04/a-grey-linen-shorts-suit-with-an-oversized-blazer-bermuda-shorts-a-white-crop-top-and-neutral-trainers.jpg" }]
      },
      {
        id: 8,
        name: "Chic Formal Blazer",
        price: 106,
        size: "M",
        color: "Brown",
        quantity: 1,
        image: "https://i.pinimg.com/originals/f2/08/ca/f208ca751f41f154b3e1bf4bb398ac99.jpg",
        images: [{ url: "https://i.pinimg.com/originals/f2/08/ca/f208ca751f41f154b3e1bf4bb398ac99.jpg" }]
      }
    ];
    setProducts(fetchedProducts);
  }, []);

  const handleProductClick = (product) => {
    localStorage.setItem("selectedProduct", JSON.stringify(product));
    navigate("/checkout");
  };

  return (
    <div className="flex flex-col lg:flex-row">
      <button onClick={toggleSidebar} className="lg:hidden border p-2 flex justify-center items-center">
        <FaFilter className='mr-2' /> Filters
      </button>

      <div
        ref={sidebarRef}
        className={`${isSidebarOpen ? "translate-x-0" : "-translate-x-full"} 
        fixed inset-y-0 z-50 left-0 w-64 bg-white overflow-y-auto transition-transform duration-300 lg:static lg:translate-x-0`}
      >
        <FilterSidebar />
      </div>

      <div className='flex-grow p-4'>
        <h2 className='text-2xl uppercase mb-4'>All Collection</h2>
        <SortOptions />
        <ProductGrid products={products} onProductClick={handleProductClick} />
      </div>
    </div>
  );
};

export default Collectionpage;



import React from 'react';
import { Link } from 'react-router-dom'; // Make sure you're importing Link if using react-router

const ProductGrid = ({ products }) => {
  return (
    <div className='grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6'>
      {products.map((product, index) => (
        <Link key={index} to={`/product/${product.id}`} className="block">
          <div className='bg-white p-4 rounded-lg shadow hover:shadow-md transition'>
            <div className='w-full h-80 mb-4 overflow-hidden'>
              <img
                src={product.images[0].url}
                alt={product.images[0].altText || product.name}
                className='w-full h-full object-cover rounded-lg'
              />
            </div>
            <h3 className='text-lg font-semibold'>{product.name}</h3>
            <p className='text-gray-600'>${product.price}</p>
          </div>
        </Link>
      ))}
    </div>
  );
};

export default ProductGrid;


import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { motion } from 'framer-motion';
import PaypalButton from './PaypalButton';

// âœ… Sample cart with color & size (Replace with global cart later)
const sampleCart = {
  items: [
    {
      id: 1,
      name: "Urban Explorer Jacket",
      price: 109,
      quantity: 2,
      color: "Black",
      size: "M",
      image: "https://i.pinimg.com/736x/49/a9/a8/49a9a8b0253adccc1fb8d078b6244296.jpg",
    },
    {
      id: 2,
      name: "Retro Denim Jacket",
      price: 92,
      quantity: 1,
      color: "Blue",
      size: "L",
      image: "https://i.pinimg.com/736x/f6/0f/16/f60f16a9c8353d5ef7e1bbf9621cc1a0.jpg",
    },
  ],
  totalPrice: 310,
};

const Checkout = () => {
  const navigate = useNavigate();
  const [checkoutId, setCheckoutId] = useState(null);
  const [email, setEmail] = useState('');


  const [shippingAddress, setShippingAddress] = useState({
    firstName: '',
    lastName: '',
    address: '',
    city: '',
    postalCode: '',
    country: '',
  });

  const handleCreateCheckout = (e) => {
    e.preventDefault();
    setCheckoutId(Date.now()); 
  };

  const handleChange = (e) => {
    setShippingAddress({ ...shippingAddress, [e.target.name]: e.target.value });
  };

  const handlePaymentSuccess = (details, data) => {
    const checkout = {
      _id: `ORDER-${Date.now()}`,
      createdAt: new Date().toISOString(),
      totalPrice: sampleCart.totalPrice,
      items: sampleCart.items,
      shippingAddress,
      paymentMethod: "PayPal",
    };

    const previousOrders = JSON.parse(localStorage.getItem("orders")) || [];
    const updatedOrders = [...previousOrders, checkout];
    localStorage.setItem("orders", JSON.stringify(updatedOrders));

    navigate("/order-success", {
      state: { checkout },
    });
  };

  return (
    <div className="grid grid-cols-1 lg:grid-cols-2 gap-10 max-w-7xl mx-auto py-10 px-6">
      {/* Shipping Form */}
      <motion.div
        className="bg-white rounded-2xl p-8 shadow-lg"
        initial={{ opacity: 0, y: 40 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.6 }}
      >
    
        <form onSubmit={handleCreateCheckout}>
      
                <div className="mb-4">
                 <input
                    type="email"
                      name="email"
                     placeholder="user@example.com"
                            value={email}
                 onChange={(e) => setEmail(e.target.value)}
                 className="w-full p-3 border border-gray-300 rounded-md bg-white text-gray-800 focus:ring-2 focus:ring-pink-400"
                          required
                      />
                         </div>

          <div className="grid grid-cols-2 gap-4 mb-4">
            <input
              type="text"
              name="firstName"
              placeholder="First Name"
              value={shippingAddress.firstName}
              onChange={handleChange}
              className="p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-pink-400"
              required
            />
            <input
              type="text"
              name="lastName"
              placeholder="Last Name"
              value={shippingAddress.lastName}
              onChange={handleChange}
              className="p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-pink-400"
              required
            />
          </div>

          <input
            type="text"
            name="address"
            placeholder="Street Address"
            value={shippingAddress.address}
            onChange={handleChange}
            className="w-full p-3 border border-gray-300 rounded-md mb-4 focus:ring-2 focus:ring-pink-400"
            required
          />

          <div className="grid grid-cols-2 gap-4 mb-4">
            <input
              type="text"
              name="city"
              placeholder="City"
              value={shippingAddress.city}
              onChange={handleChange}
              className="p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-pink-400"
              required
            />
            <input
              type="text"
              name="postalCode"
              placeholder="Postal Code"
              value={shippingAddress.postalCode}
              onChange={handleChange}
              className="p-3 border border-gray-300 rounded-md focus:ring-2 focus:ring-pink-400"
              required
            />
          </div>

          <input
            type="text"
            name="country"
            placeholder="Country"
            value={shippingAddress.country}
            onChange={handleChange}
            className="w-full p-3 border border-gray-300 rounded-md mb-6 focus:ring-2 focus:ring-pink-400"
            required
          />

          <button
            type="submit"
            className="bg-pink-500 hover:bg-pink-600 transition-all text-white px-6 py-3 rounded-md w-full font-medium tracking-wide shadow-md"
          >
            Place Order
          </button>
        </form>
      </motion.div>

      {/* Cart Summary */}
      <motion.div
        className="bg-white rounded-2xl p-8 shadow-lg h-fit"
        initial={{ opacity: 0, y: 40 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.2, duration: 0.6 }}
      >
        <h3 className="text-2xl font-bold mb-6 text-gray-800">Your Cart</h3>

        {sampleCart.items.map((item) => (
          <motion.div
            key={item.id}
            className="flex items-start mb-5 p-3 rounded-lg hover:bg-pink-50 transition duration-300"
            whileHover={{ scale: 1.015 }}
          >
            <img
              src={item.image}
              alt={item.name}
              className="w-20 h-20 object-cover rounded border mr-4"
            />
            <div className="flex-1">
              <h4 className="text-base font-semibold text-gray-900">{item.name}</h4>
              <p className="text-sm text-gray-600">Color: {item.color}</p>
              <p className="text-sm text-gray-600">Size: {item.size}</p>
              <p className="text-sm text-gray-500">
                ${item.price} Ã— {item.quantity}
              </p>
            </div>
            <p className="text-sm font-semibold text-gray-700">
              ${item.price * item.quantity}
            </p>
          </motion.div>
        ))}

        <div className="border-t mt-6 pt-4 text-right text-xl font-bold text-pink-600">
          Total: ${sampleCart.totalPrice}
        </div>

        <div className="mt-6">
          {!checkoutId ? (
            <button
              type="submit"
              className="w-full bg-black text-white py-3 rounded-md font-semibold hover:bg-gray-900 transition-all"
            >
              Continue to Payment
            </button>
          ) : (
            <div>
              <PaypalButton
                amount={sampleCart.totalPrice}
                onSuccess={handlePaymentSuccess}
                onError={() => alert("Payment failed")}
              />
            </div>
          )}
        </div>
      </motion.div>
    </div>
  );
};

export default Checkout;


import React from 'react';
import { BrowserRouter, Routes, Route } from 'react-router-dom';
import UserLayout from './components/Layout/UserLayout';
import Home from './pages/Home';
import { Toaster } from 'sonner';
import Login from './pages/Login';
import Register from './pages/Register';
import Profile from './pages/Profile';
import Collectionpage from './pages/Collectionpage';
import ProductDetails from './components/Product/ProductDetails';
import Checkout from './components/Cart/Checkout';
import OrderConfirmationPage from './pages/OrderConfirmationPage';
import OrderDetails from './pages/OrderDetails'; // âœ… Import the page


const App = () => {
  return (
    <BrowserRouter>
      <Toaster position="top-right" />
      <Routes>
        <Route path="/login" element={<Login />} />
        <Route path="/register" element={<Register />} />
        <Route path="/order/:id" element={<OrderDetails />} /> 

        <Route path="/" element={<UserLayout />}>
          <Route index element={<Home />} />
          <Route path="profile" element={<Profile />} />
          <Route path="collection/:collection" element={<Collectionpage />} />
          <Route path="product/:id" element={<ProductDetails />} />
          <Route path="checkout" element={<Checkout />} />
          <Route path="order-success" element={<OrderConfirmationPage />} />
        </Route>
      </Routes>
    </BrowserRouter>
  );
};

export default App;
